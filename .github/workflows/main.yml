name: CI

on:
  push:
  pull_request:

jobs:
  test:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        os: [ubuntu-latest]
        component: [builder]
        #component: [formatting, builder, cli, client, machine, reporters, serializer, server, util, workflow, allelse]
        python-version: [3.7]
    steps:
      - uses: actions/checkout@v1

      - uses: actions/setup-python@v1
        with:
          python-version: ${{ matrix.python-version }}
          architecture: 'x64'

      - uses: actions/cache@v1
        if: startsWith(runner.os, 'Linux')
        with:
          path: ~/.cache/pip
          key: ${{ runner.os }}-${{ matrix.python-version }}-pip-${{ hashFiles('requirements/*requirements.txt') }}
          restore-keys: |
            ${{ runner.os }}-${{ matrix.python-version }}-pip-

      - name: Extract branch name (works for both 'pull' and 'push' events)
        shell: bash
        run: echo "##[set-output name=branch;]$( if [ ${{ github.event_name }} = push ]; then echo ${GITHUB_REF#refs/heads/}; else echo ${{ github.event.pull_request.head.ref }}; fi )"
        id: extract_branch

      - name: Install
        run: |
          #pip install --upgrade pip
          #pip install --upgrade pip-tools
          #pip uninstall -y aws-sam-cli pyyaml # Workaround for fixing an issue with incompatible package versions
          #pip install -r requirements/full_requirements.txt
          pip install .[tests]
#
#      - name: Get git diff files for Black
#        shell: bash
#        run: |
#          git diff origin/master..origin/"${{ steps.extract_branch.outputs.branch }}" --name-only
#          FILE_DIFFS=$(git diff origin/master..origin/${{ steps.extract_branch.outputs.branch }} --name-only | sed -n "/.a/ p")
#          echo "FILE_DIFFS=$FILE_DIFFS" >> $GITHUB_ENV
#          echo $GITHUB_ENV
#          echo 5
#        id: python_git_diff_files

      - name: Run code quality checks
#        if: ${{ env.FILE_DIFFS }}
        run: |
          FILE_DIFFS=$(git diff origin/master..origin/${{ steps.extract_branch.outputs.branch }} --name-only | sed -n "/.py/ p")
          echo "${FILE_DIFFS}"

          if [ -z "${FILE_DIFFS}" ]
          then
            echo "No Python files to check."
          else
            git diff origin/master..origin/${{ steps.extract_branch.outputs.branch }} | flakehell lint --diff
            black --check "${FILE_DIFFS}"
          fi

      - name: Test ${{ matrix.component }}
        run: python setup.py test${{ matrix.component }}

      - name: Save Coverage
        run: |
          mkdir -p /tmp/coverage-reports
          mv ./coverage.xml /tmp/coverage-reports/${{ matrix.component }}-coverage.xml
          mv ./junit/junit.xml /tmp/coverage-reports/${{ matrix.component }}-junit.xml

      - uses: actions/upload-artifact@v1
        with:
          name: Coverage Reports
          path: /tmp/coverage-reports

  upload-coverage-reports:
    runs-on: ubuntu-latest
    needs: test
    steps:
      - uses: actions/checkout@v1

      - uses: actions/download-artifact@v1
        with:
          name: Coverage Reports
          path: /tmp/coverage-reports

      - name: Copy Coverage Reports
        run: cp /tmp/coverage-reports/*.xml .

      - uses: codecov/codecov-action@v1
        with:
          token: fc2844a2-5a6c-43ef-a758-05bc50562b14
          fail_ci_if_error: false

#  build-docs:
#    runs-on: ubuntu-latest
#    steps:
#      - uses: actions/checkout@v1
#
#      - uses: actions/setup-python@v1
#        with:
#          python-version: '3.7' # Version range or exact version of a Python version to use, using semvers version range syntax.
#          architecture: 'x64'
#
#      - name: Install deps
#        run: |
#          pip install --upgrade pip
#          pip install .[docs]
#
#      - name: Build Docs
#        run: make docs
