name: CI

on:
  push:
  pull_request:

jobs:
  code_checks:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        os: [ubuntu-latest]
        code-check: [black, flakehell]
        python-version: [3.7]
    steps:
      - uses: actions/checkout@v1

      - uses: actions/setup-python@v1
        with:
          python-version: ${{ matrix.python-version }}
          architecture: 'x64'

      - uses: actions/cache@v2
        if: startsWith(runner.os, 'Linux')
        with:
          path: ${{ env.pythonLocation }}
          key: ${{ env.pythonLocation }}-${{ runner.os }}-${{ matrix.python-version }}-${{ hashFiles('**/*requirements.txt') }}
          restore-keys: |
            ${{ runner.os }}-${{ matrix.python-version }}-pip-

      - name: Extract branch name  # works for both 'push' and 'pull_request' events
        shell: bash
        run: |
          CURRENT_BRANCH_NAME=$( if [ ${{ github.event_name }} = push ]; then echo ${GITHUB_REF#refs/heads/}; else echo ${{ github.event.pull_request.head.ref }}; fi )
          echo "##[set-output name=branch;]${CURRENT_BRANCH_NAME}"
        id: extract_branch

      - name: Install test requirements
        run: |
          pip install --upgrade pip
          pip install --upgrade pip-tools
          pip install -r requirements/test_requirements.txt

      - name: Run code quality checks
        run: |
          FILES_TO_CHECK=$(git diff origin/master..origin/${{ steps.extract_branch.outputs.branch }} --name-only --diff-filter=ACM '*py')
          echo "> Changed Python files: ${FILES_TO_CHECK}"

          if [ -z "${FILES_TO_CHECK}" ]
          then
            echo "> No Python files to check, exiting."
            exit 0
          fi

          if [ ${{ matrix.code-check }} = black ]
          then
            echo "> Starting Black code-formatting check for files: ${FILES_TO_CHECK}"
            black --check ${FILES_TO_CHECK}
          else
            echo "> Starting Flakehell code-quality check for diff in files: ${FILES_TO_CHECK}"
            git diff origin/master..origin/${{ steps.extract_branch.outputs.branch }} -U0 --diff-filter=ACM '*.py' | flakehell lint --diff
          fi

  test:
    runs-on: ubuntu-latest
    needs: code_checks
    strategy:
      matrix:
        os: [ubuntu-latest]
        component: [builder, cli, client, machine, reporters, serializer, server, util, workflow, allelse]
        python-version: [3.7]
    steps:
      - uses: actions/checkout@v1

      - uses: actions/setup-python@v1
        with:
          python-version: ${{ matrix.python-version }}
          architecture: 'x64'

      - uses: actions/cache@v2
        if: startsWith(runner.os, 'Linux')
        with:
          path: ${{ env.pythonLocation }}
          key: ${{ env.pythonLocation }}-${{ runner.os }}-${{ matrix.python-version }}-env-${{ hashFiles('**/*requirements.txt') }}
          restore-keys: |
            ${{ env.pythonLocation }}-${{ runner.os }}-${{ matrix.python-version }}-env-

      - name: Install
        run: |
          pip install --upgrade pip==20.1.1
          pip install -r requirements/full_requirements.txt
          pip install -r requirements/test_requirements.txt

      - name: Test ${{ matrix.component }}
        run: python setup.py test${{ matrix.component }}

      - name: Save Coverage
        run: |
          mkdir -p /tmp/coverage-reports
          mv ./coverage.xml /tmp/coverage-reports/${{ matrix.component }}-coverage.xml
          mv ./junit/junit.xml /tmp/coverage-reports/${{ matrix.component }}-junit.xml

      - uses: actions/upload-artifact@v1
        with:
          name: Coverage Reports
          path: /tmp/coverage-reports

  upload-coverage-reports:
    runs-on: ubuntu-latest
    needs: test
    steps:
      - uses: actions/checkout@v1

      - uses: actions/download-artifact@v1
        with:
          name: Coverage Reports
          path: /tmp/coverage-reports

      - name: Copy Coverage Reports
        run: cp /tmp/coverage-reports/*.xml .

      - uses: codecov/codecov-action@v1
        with:
          token: fc2844a2-5a6c-43ef-a758-05bc50562b14
          fail_ci_if_error: false

  build-docs:
    runs-on: ubuntu-latest
    needs: code_checks
    steps:
      - uses: actions/checkout@v1

      - uses: actions/setup-python@v1
        with:
          python-version: '3.7' # Version range or exact version of a Python version to use, using semvers version range syntax.
          architecture: 'x64'

      - uses: actions/cache@v2
        with:
          path: ~/.cache/pip
          key: ${{ runner.os }}-${{ matrix.python-version }}-pip-${{ hashFiles('**/*requirements.txt') }}
          restore-keys: |
            ${{ runner.os }}-${{ matrix.python-version }}-pip-

      - name: Install deps
        run: |
          pip install --upgrade pip
          pip install .[docs]

      - name: Build Docs
        run: make docs
