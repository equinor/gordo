# Run jobs on anything pushed or tagged on the master branch
# PyPi is not here, because we only want that on releases/tags
name: MasterCI

on:
  release:
    types: [published, prereleased, edited]
  push:
    branches:
      - master
  pull_request:

jobs:
  push-images:
    runs-on: ubuntu-latest
    env:
      IMAGE_LICENSE: AGPL-3.0
      IMAGE_HOME_URL: https://github.com/equinor/gordo
      DOCKER_PROD_REGISTRY: auroraprodacr.azurecr.io
      DOCKER_DEV_REGISTRY: auroradevacr.azurecr.io
    steps:
      - uses: actions/checkout@v1

      - name: Install jq
        run: |
          sudo apt-get install -y jq

      - name: Prepare variables
        id: prep
        run: |
          bash ci/github_docker.sh

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1

      - name: Login to auroraprodacr
        uses: docker/login-action@v1
        if: ${{ steps.prep.outputs.image_type == 'prod' }}
        with:
          registry: ${{ env.DOCKER_PROD_REGISTRY }}
          username: ${{ secrets.DOCKER_PROD_USERNAME }}
          password: ${{ secrets.DOCKER_PROD_PASSWORD }}

      - name: Login to auroradevacr
        uses: docker/login-action@v1
        with:
          registry: ${{ env.DOCKER_DEV_REGISTRY }}
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_TOKEN }}

      - name: Build base image
        uses: docker/build-push-action@v2
        with:
          context: .
          file: ./Dockerfile
          tags: ${{ steps.prep.outputs.base_image }}
          load: true

      - name: Run Trivy vulnerability scanner
        env:
          IMAGE: ${{ steps.prep.outputs.base_image }}
        run: |
          bash ci/trivy_scan.sh "$IMAGE"

      - name: Push base image
        run: |
          docker push ${{ steps.prep.outputs.base_image }}

      - name: Push gordo-client
        uses: docker/build-push-action@v2
        with:
          push: true
          context: .
          file: ./Dockerfile-Client
          build-args: |
            BASE_IMAGE=${{ steps.prep.outputs.base_image }}
          tags: ${{ steps.prep.outputs.tags_gordo_client }}
          labels: |
            org.opencontainers.image.title=gordo-client
            org.opencontainers.image.description=Gordo client
            org.opencontainers.image.url=${{ env.IMAGE_HOME_URL }}
            org.opencontainers.image.version=${{ steps.prep.outputs.version }}
            org.opencontainers.image.created=${{ steps.prep.outputs.created }}
            org.opencontainers.image.revision=${{ github.sha }}
            org.opencontainers.image.licenses=${{ env.IMAGE_LICENSE }}

      - name: Push gordo-deploy
        uses: docker/build-push-action@v2
        with:
          push: true
          context: .
          file: ./Dockerfile-GordoDeploy
          build-args: |
            BASE_IMAGE=${{ steps.prep.outputs.base_image }}
          tags: ${{ steps.prep.outputs.tags_gordo_deploy }}
          labels: |
            org.opencontainers.image.title=gordo-deploy
            org.opencontainers.image.description=Gordo deploy
            org.opencontainers.image.url=${{ env.IMAGE_HOME_URL }}
            org.opencontainers.image.version=${{ steps.prep.outputs.version }}
            org.opencontainers.image.created=${{ steps.prep.outputs.created }}
            org.opencontainers.image.revision=${{ github.sha }}
            org.opencontainers.image.licenses=${{ env.IMAGE_LICENSE }}

      - name: Push gordo-model-builder
        uses: docker/build-push-action@v2
        with:
          push: true
          context: .
          file: ./Dockerfile-ModelBuilder
          build-args: |
            BASE_IMAGE=${{ steps.prep.outputs.base_image }}
          tags: ${{ steps.prep.outputs.tags_gordo_model_builder }}
          labels: |
            org.opencontainers.image.title=gordo-model-builder
            org.opencontainers.image.description=Gordo model builder
            org.opencontainers.image.url=${{ env.IMAGE_HOME_URL }}
            org.opencontainers.image.version=${{ steps.prep.outputs.version }}
            org.opencontainers.image.created=${{ steps.prep.outputs.created }}
            org.opencontainers.image.revision=${{ github.sha }}
            org.opencontainers.image.licenses=${{ env.IMAGE_LICENSE }}

      - name: Push gordo-deploy
        uses: docker/build-push-action@v2
        with:
          push: true
          context: .
          file: ./Dockerfile-ModelServer
          build-args: |
            BASE_IMAGE=${{ steps.prep.outputs.base_image }}
          tags: ${{ steps.prep.outputs.tags_gordo_model_server }}
          labels: |
            org.opencontainers.image.title=gordo-model-server
            org.opencontainers.image.description=Gordo model server
            org.opencontainers.image.url=${{ env.IMAGE_HOME_URL }}
            org.opencontainers.image.version=${{ steps.prep.outputs.version }}
            org.opencontainers.image.created=${{ steps.prep.outputs.created }}
            org.opencontainers.image.revision=${{ github.sha }}
            org.opencontainers.image.licenses=${{ env.IMAGE_LICENSE }}
